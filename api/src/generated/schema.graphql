### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type Endpoint {
  id: ID!
  translator: Translator!
  type: RequestType!
  url: String!
}

input EndpointCreateInput {
  id: ID
  translator: TranslatorCreateOneWithoutEndpointsInput!
  type: RequestType!
  url: String!
}

input EndpointCreateManyWithoutTranslatorInput {
  connect: [EndpointWhereUniqueInput!]
  create: [EndpointCreateWithoutTranslatorInput!]
}

input EndpointCreateWithoutTranslatorInput {
  id: ID
  type: RequestType!
  url: String!
}

enum EndpointOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input EndpointScalarWhereInput {
  AND: [EndpointScalarWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [EndpointScalarWhereInput!]
  OR: [EndpointScalarWhereInput!]
  type: RequestType
  type_in: [RequestType!]
  type_not: RequestType
  type_not_in: [RequestType!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

input EndpointUpdateInput {
  translator: TranslatorUpdateOneRequiredWithoutEndpointsInput
  type: RequestType
  url: String
}

input EndpointUpdateManyDataInput {
  type: RequestType
  url: String
}

input EndpointUpdateManyWithoutTranslatorInput {
  connect: [EndpointWhereUniqueInput!]
  create: [EndpointCreateWithoutTranslatorInput!]
  delete: [EndpointWhereUniqueInput!]
  deleteMany: [EndpointScalarWhereInput!]
  disconnect: [EndpointWhereUniqueInput!]
  set: [EndpointWhereUniqueInput!]
  update: [EndpointUpdateWithWhereUniqueWithoutTranslatorInput!]
  updateMany: [EndpointUpdateManyWithWhereNestedInput!]
  upsert: [EndpointUpsertWithWhereUniqueWithoutTranslatorInput!]
}

input EndpointUpdateManyWithWhereNestedInput {
  data: EndpointUpdateManyDataInput!
  where: EndpointScalarWhereInput!
}

input EndpointUpdateWithoutTranslatorDataInput {
  type: RequestType
  url: String
}

input EndpointUpdateWithWhereUniqueWithoutTranslatorInput {
  data: EndpointUpdateWithoutTranslatorDataInput!
  where: EndpointWhereUniqueInput!
}

input EndpointUpsertWithWhereUniqueWithoutTranslatorInput {
  create: EndpointCreateWithoutTranslatorInput!
  update: EndpointUpdateWithoutTranslatorDataInput!
  where: EndpointWhereUniqueInput!
}

input EndpointWhereInput {
  AND: [EndpointWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [EndpointWhereInput!]
  OR: [EndpointWhereInput!]
  translator: TranslatorWhereInput
  type: RequestType
  type_in: [RequestType!]
  type_not: RequestType
  type_not_in: [RequestType!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

input EndpointWhereUniqueInput {
  id: ID
}

type Mutation {
  createEndpoint(data: EndpointCreateInput!): Endpoint!
  createTest(data: TestCreateInput!): Test!
  createTranslator(data: TranslatorCreateInput!): Translator!
  deleteEndpoint(where: EndpointWhereUniqueInput!): Endpoint
  deleteTest(where: TestWhereUniqueInput!): Test
  deleteTranslator(where: TranslatorWhereUniqueInput!): Translator
  runTest(testId: ID!): Run!
  updateEndpoint(data: EndpointUpdateInput!, where: EndpointWhereUniqueInput!): Endpoint
  updateTest(data: TestUpdateInput!, where: TestWhereUniqueInput!): Test
  updateTranslator(data: TranslatorUpdateInput!, where: TranslatorWhereUniqueInput!): Translator
}

type Query {
  endpoints(after: String, before: String, first: Int, last: Int, orderBy: EndpointOrderByInput, skip: Int, where: EndpointWhereInput): [Endpoint!]!
  runs(after: String, before: String, first: Int, last: Int, orderBy: RunOrderByInput, skip: Int, where: RunWhereInput): [Run!]!
  tests(after: String, before: String, first: Int, last: Int, orderBy: TestOrderByInput, skip: Int, where: TestWhereInput): [Test!]!
  translator(where: TranslatorWhereUniqueInput!): Translator
  translators(after: String, before: String, first: Int, last: Int, orderBy: TranslatorOrderByInput, skip: Int, where: TranslatorWhereInput): [Translator!]!
}

enum RequestType {
  DELETE
  GET
  POST
  PUT
}

enum ResultType {
  Fail
  Pass
}

type Run {
  actual: String!
  expected: String!
  id: ID!
  result: ResultType!
  test: Test!
}

input RunCreateManyWithoutTestInput {
  connect: [RunWhereUniqueInput!]
  create: [RunCreateWithoutTestInput!]
}

input RunCreateWithoutTestInput {
  actual: String!
  expected: String!
  id: ID
  result: ResultType!
}

enum RunOrderByInput {
  actual_ASC
  actual_DESC
  createdAt_ASC
  createdAt_DESC
  expected_ASC
  expected_DESC
  id_ASC
  id_DESC
  result_ASC
  result_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input RunScalarWhereInput {
  actual: String
  actual_contains: String
  actual_ends_with: String
  actual_gt: String
  actual_gte: String
  actual_in: [String!]
  actual_lt: String
  actual_lte: String
  actual_not: String
  actual_not_contains: String
  actual_not_ends_with: String
  actual_not_in: [String!]
  actual_not_starts_with: String
  actual_starts_with: String
  AND: [RunScalarWhereInput!]
  expected: String
  expected_contains: String
  expected_ends_with: String
  expected_gt: String
  expected_gte: String
  expected_in: [String!]
  expected_lt: String
  expected_lte: String
  expected_not: String
  expected_not_contains: String
  expected_not_ends_with: String
  expected_not_in: [String!]
  expected_not_starts_with: String
  expected_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [RunScalarWhereInput!]
  OR: [RunScalarWhereInput!]
  result: ResultType
  result_in: [ResultType!]
  result_not: ResultType
  result_not_in: [ResultType!]
}

input RunUpdateManyDataInput {
  actual: String
  expected: String
  result: ResultType
}

input RunUpdateManyWithoutTestInput {
  connect: [RunWhereUniqueInput!]
  create: [RunCreateWithoutTestInput!]
  delete: [RunWhereUniqueInput!]
  deleteMany: [RunScalarWhereInput!]
  disconnect: [RunWhereUniqueInput!]
  set: [RunWhereUniqueInput!]
  update: [RunUpdateWithWhereUniqueWithoutTestInput!]
  updateMany: [RunUpdateManyWithWhereNestedInput!]
  upsert: [RunUpsertWithWhereUniqueWithoutTestInput!]
}

input RunUpdateManyWithWhereNestedInput {
  data: RunUpdateManyDataInput!
  where: RunScalarWhereInput!
}

input RunUpdateWithoutTestDataInput {
  actual: String
  expected: String
  result: ResultType
}

input RunUpdateWithWhereUniqueWithoutTestInput {
  data: RunUpdateWithoutTestDataInput!
  where: RunWhereUniqueInput!
}

input RunUpsertWithWhereUniqueWithoutTestInput {
  create: RunCreateWithoutTestInput!
  update: RunUpdateWithoutTestDataInput!
  where: RunWhereUniqueInput!
}

input RunWhereInput {
  actual: String
  actual_contains: String
  actual_ends_with: String
  actual_gt: String
  actual_gte: String
  actual_in: [String!]
  actual_lt: String
  actual_lte: String
  actual_not: String
  actual_not_contains: String
  actual_not_ends_with: String
  actual_not_in: [String!]
  actual_not_starts_with: String
  actual_starts_with: String
  AND: [RunWhereInput!]
  expected: String
  expected_contains: String
  expected_ends_with: String
  expected_gt: String
  expected_gte: String
  expected_in: [String!]
  expected_lt: String
  expected_lte: String
  expected_not: String
  expected_not_contains: String
  expected_not_ends_with: String
  expected_not_in: [String!]
  expected_not_starts_with: String
  expected_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [RunWhereInput!]
  OR: [RunWhereInput!]
  result: ResultType
  result_in: [ResultType!]
  result_not: ResultType
  result_not_in: [ResultType!]
  test: TestWhereInput
}

input RunWhereUniqueInput {
  id: ID
}

type Test {
  expected: String!
  id: ID!
  request: String!
  runs(after: String, before: String, first: Int, last: Int, orderBy: RunOrderByInput, skip: Int, where: RunWhereInput): [Run!]
  translator: Translator!
}

input TestCreateInput {
  expected: String!
  id: ID
  request: String!
  runs: RunCreateManyWithoutTestInput
  translator: TranslatorCreateOneWithoutTestsInput!
}

input TestCreateManyWithoutTranslatorInput {
  connect: [TestWhereUniqueInput!]
  create: [TestCreateWithoutTranslatorInput!]
}

input TestCreateWithoutTranslatorInput {
  expected: String!
  id: ID
  request: String!
  runs: RunCreateManyWithoutTestInput
}

enum TestOrderByInput {
  createdAt_ASC
  createdAt_DESC
  expected_ASC
  expected_DESC
  id_ASC
  id_DESC
  request_ASC
  request_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input TestScalarWhereInput {
  AND: [TestScalarWhereInput!]
  expected: String
  expected_contains: String
  expected_ends_with: String
  expected_gt: String
  expected_gte: String
  expected_in: [String!]
  expected_lt: String
  expected_lte: String
  expected_not: String
  expected_not_contains: String
  expected_not_ends_with: String
  expected_not_in: [String!]
  expected_not_starts_with: String
  expected_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [TestScalarWhereInput!]
  OR: [TestScalarWhereInput!]
  request: String
  request_contains: String
  request_ends_with: String
  request_gt: String
  request_gte: String
  request_in: [String!]
  request_lt: String
  request_lte: String
  request_not: String
  request_not_contains: String
  request_not_ends_with: String
  request_not_in: [String!]
  request_not_starts_with: String
  request_starts_with: String
}

input TestUpdateInput {
  expected: String
  request: String
  runs: RunUpdateManyWithoutTestInput
  translator: TranslatorUpdateOneRequiredWithoutTestsInput
}

input TestUpdateManyDataInput {
  expected: String
  request: String
}

input TestUpdateManyWithoutTranslatorInput {
  connect: [TestWhereUniqueInput!]
  create: [TestCreateWithoutTranslatorInput!]
  delete: [TestWhereUniqueInput!]
  deleteMany: [TestScalarWhereInput!]
  disconnect: [TestWhereUniqueInput!]
  set: [TestWhereUniqueInput!]
  update: [TestUpdateWithWhereUniqueWithoutTranslatorInput!]
  updateMany: [TestUpdateManyWithWhereNestedInput!]
  upsert: [TestUpsertWithWhereUniqueWithoutTranslatorInput!]
}

input TestUpdateManyWithWhereNestedInput {
  data: TestUpdateManyDataInput!
  where: TestScalarWhereInput!
}

input TestUpdateWithoutTranslatorDataInput {
  expected: String
  request: String
  runs: RunUpdateManyWithoutTestInput
}

input TestUpdateWithWhereUniqueWithoutTranslatorInput {
  data: TestUpdateWithoutTranslatorDataInput!
  where: TestWhereUniqueInput!
}

input TestUpsertWithWhereUniqueWithoutTranslatorInput {
  create: TestCreateWithoutTranslatorInput!
  update: TestUpdateWithoutTranslatorDataInput!
  where: TestWhereUniqueInput!
}

input TestWhereInput {
  AND: [TestWhereInput!]
  expected: String
  expected_contains: String
  expected_ends_with: String
  expected_gt: String
  expected_gte: String
  expected_in: [String!]
  expected_lt: String
  expected_lte: String
  expected_not: String
  expected_not_contains: String
  expected_not_ends_with: String
  expected_not_in: [String!]
  expected_not_starts_with: String
  expected_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [TestWhereInput!]
  OR: [TestWhereInput!]
  request: String
  request_contains: String
  request_ends_with: String
  request_gt: String
  request_gte: String
  request_in: [String!]
  request_lt: String
  request_lte: String
  request_not: String
  request_not_contains: String
  request_not_ends_with: String
  request_not_in: [String!]
  request_not_starts_with: String
  request_starts_with: String
  runs_every: RunWhereInput
  runs_none: RunWhereInput
  runs_some: RunWhereInput
  translator: TranslatorWhereInput
}

input TestWhereUniqueInput {
  id: ID
}

type Translator {
  endpoints(after: String, before: String, first: Int, last: Int, orderBy: EndpointOrderByInput, skip: Int, where: EndpointWhereInput): [Endpoint!]
  id: ID!
  requestFunction: String
  responseFunction: String
  tests(after: String, before: String, first: Int, last: Int, orderBy: TestOrderByInput, skip: Int, where: TestWhereInput): [Test!]
}

input TranslatorCreateInput {
  endpoints: EndpointCreateManyWithoutTranslatorInput
  id: ID
  requestFunction: String
  responseFunction: String
  tests: TestCreateManyWithoutTranslatorInput
}

input TranslatorCreateOneWithoutEndpointsInput {
  connect: TranslatorWhereUniqueInput
  create: TranslatorCreateWithoutEndpointsInput
}

input TranslatorCreateOneWithoutTestsInput {
  connect: TranslatorWhereUniqueInput
  create: TranslatorCreateWithoutTestsInput
}

input TranslatorCreateWithoutEndpointsInput {
  id: ID
  requestFunction: String
  responseFunction: String
  tests: TestCreateManyWithoutTranslatorInput
}

input TranslatorCreateWithoutTestsInput {
  endpoints: EndpointCreateManyWithoutTranslatorInput
  id: ID
  requestFunction: String
  responseFunction: String
}

enum TranslatorOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  requestFunction_ASC
  requestFunction_DESC
  responseFunction_ASC
  responseFunction_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input TranslatorUpdateInput {
  endpoints: EndpointUpdateManyWithoutTranslatorInput
  requestFunction: String
  responseFunction: String
  tests: TestUpdateManyWithoutTranslatorInput
}

input TranslatorUpdateOneRequiredWithoutEndpointsInput {
  connect: TranslatorWhereUniqueInput
  create: TranslatorCreateWithoutEndpointsInput
  update: TranslatorUpdateWithoutEndpointsDataInput
  upsert: TranslatorUpsertWithoutEndpointsInput
}

input TranslatorUpdateOneRequiredWithoutTestsInput {
  connect: TranslatorWhereUniqueInput
  create: TranslatorCreateWithoutTestsInput
  update: TranslatorUpdateWithoutTestsDataInput
  upsert: TranslatorUpsertWithoutTestsInput
}

input TranslatorUpdateWithoutEndpointsDataInput {
  requestFunction: String
  responseFunction: String
  tests: TestUpdateManyWithoutTranslatorInput
}

input TranslatorUpdateWithoutTestsDataInput {
  endpoints: EndpointUpdateManyWithoutTranslatorInput
  requestFunction: String
  responseFunction: String
}

input TranslatorUpsertWithoutEndpointsInput {
  create: TranslatorCreateWithoutEndpointsInput!
  update: TranslatorUpdateWithoutEndpointsDataInput!
}

input TranslatorUpsertWithoutTestsInput {
  create: TranslatorCreateWithoutTestsInput!
  update: TranslatorUpdateWithoutTestsDataInput!
}

input TranslatorWhereInput {
  AND: [TranslatorWhereInput!]
  endpoints_every: EndpointWhereInput
  endpoints_none: EndpointWhereInput
  endpoints_some: EndpointWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [TranslatorWhereInput!]
  OR: [TranslatorWhereInput!]
  requestFunction: String
  requestFunction_contains: String
  requestFunction_ends_with: String
  requestFunction_gt: String
  requestFunction_gte: String
  requestFunction_in: [String!]
  requestFunction_lt: String
  requestFunction_lte: String
  requestFunction_not: String
  requestFunction_not_contains: String
  requestFunction_not_ends_with: String
  requestFunction_not_in: [String!]
  requestFunction_not_starts_with: String
  requestFunction_starts_with: String
  responseFunction: String
  responseFunction_contains: String
  responseFunction_ends_with: String
  responseFunction_gt: String
  responseFunction_gte: String
  responseFunction_in: [String!]
  responseFunction_lt: String
  responseFunction_lte: String
  responseFunction_not: String
  responseFunction_not_contains: String
  responseFunction_not_ends_with: String
  responseFunction_not_in: [String!]
  responseFunction_not_starts_with: String
  responseFunction_starts_with: String
  tests_every: TestWhereInput
  tests_none: TestWhereInput
  tests_some: TestWhereInput
}

input TranslatorWhereUniqueInput {
  id: ID
}
